
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
@use "sass:map";
@use "./colors.scss";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$custom-primary: mat.m2-define-palette(map.get(colors.$palette-map, primary), default, light, dark);
$custom-accent: mat.m2-define-palette(map.get(colors.$palette-map, accent), default, light, dark);

// The warn palette is optional (defaults to red).
$custom-error: mat.m2-define-palette(map.get(colors.$palette-map, error), default, light, dark);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$custom-theme: mat.m2-define-light-theme((
  color: (
    primary: $custom-primary,
    accent: $custom-accent,
    warn: $custom-error,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($custom-theme);
/* You can add global styles to this file, and also import other style files */
